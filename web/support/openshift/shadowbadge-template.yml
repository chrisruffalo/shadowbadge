apiVersion: v1
kind: Template
metadata:
  name: shadowbadge-template
objects:
# image stream target for maven builds
- apiVersion: image.openshift.io/v1
  kind: ImageStream
  metadata:
    name: "is-shadowbadge-ui-${OUTPUT_TYPE}"
    labels:
      app: "shadowbadge-ui-${OUTPUT_TYPE}"
    spec:
      lookupPolicy:
        local: false
- apiVersion: image.openshift.io/v1
  kind: ImageStream
  metadata:
    name: "gatekeeper"
    labels:
      app: "shadowbadge"
    spec:
      tags:
      - from:
          kind: DockerImage
          name: docker.io/keycloak/keycloak-gatekeeper:latest
# build config target for maven builds
- apiVersion: build.openshift.io/v1
  kind: BuildConfig
  metadata:
    name: "bc-shadowbadge-ui-${OUTPUT_TYPE}"
    labels:
      app: "shadowbadge-ui-${OUTPUT_TYPE}"
  spec:
    output:
      to:
        kind: ImageStreamTag
        name: "is-shadowbadge-ui-${OUTPUT_TYPE}:latest"
    postCommit: {}
    resources:
      limits:
        memory: 128Mi
      requests:
        memory: 256Mi
    runPolicy: SerialLatestOnly
    source:
      binary: {}
      type: Binary
    strategy:
      type: Docker
      dockerStrategy:
        from:
          kind: DockerImage
          name: ${DOCKER_IMAGE}
    triggers: []
# service configuration
- apiVersion: v1
  kind: Service
  metadata:
    name: "service-shadowbadge-ui-${OUTPUT_TYPE}"
    labels:
      app: shadowbadge-ui-${OUTPUT_TYPE}
    annotations:
      # in openshift 4 create a tls.key/tls.crt in the given secret for default consumption by gatekeeper
      "service.beta.openshift.io/serving-cert-secret-name": app-shadowbadge-certs
      # in openshift 3 create a tls.key/tls.crt in the given secret for default consumption by gatekeeper
      "service.alpha.openshift.io/serving-cert-secret-name": app-shadowbadge-certs
  spec:
    ports:
    - name: 8080-tcp
      port: 8080
      protocol: TCP
      targetPort: 8080
    selector:
      app: shadowbadge-ui-${OUTPUT_TYPE}
    sessionAffinity: None
    type: ClusterIP
# deployment configuration for shadowbadge
- apiVersion: apps.openshift.io/v1
  kind: DeploymentConfig
  metadata:
    name: "dc-shadowbadge-ui-${OUTPUT_TYPE}"
    labels:
      app: shadowbadge-ui-${OUTPUT_TYPE}
      type: ${OUTPUT_TYPE}
  spec:
    replicas: ${{REPLICA_COUNT}}
    revisionHistoryLimit: 5
    selector:
      deploymentConfig: dc-shadowbadge-ui-${OUTPUT_TYPE}
    strategy:
      type: Rolling
    template:
      metadata:
        name: "shadowbadge-ui-${OUTPUT_TYPE}"
        labels:
          app: shadowbadge-ui-${OUTPUT_TYPE}
          deploymentConfig: dc-shadowbadge-ui-${OUTPUT_TYPE}
      spec:
        containers:
        # shadowbadge application container
        - name: shadowbadge-ui-${OUTPUT_TYPE}
          image: "is-shadowbadge-ui-${OUTPUT_TYPE}:latest"
          imagePullPolicy: Always
          # override quarkus environment variables to connect to postgres
          env:
          - name: QUARKUS_DATASOURCE_URL
            value: "jdbc:postgresql://${POSTGRES_SERVICE}:${POSTGRES_PORT}/shadowbadge"
          - name: QUARKUS_DATASOURCE_USERNAME
            value: "${POSTGRES_USER}"
          - name: QUARKUS_DATASOURCE_PASSWORD
            value: "${POSTGRES_PASSWORD}"
          - name: SHADOWBADGE_EXTERNAL_URL
            value: "https://${EXTERNAL_HOSTNAME}"
          - name: SHADOWBADGE_ACCOUNT_URL
            value: "${ACCOUNT_URL}"
          - name: SHADOWBADGE_KEYCLOAK_URL
            value: "${KEYCLOAK_URL}"
          - name: SHADOWBADGE_KEYCLOAK_REALM
            value: "${KEYCLOAK_REALM}"
          - name: QUARKUS_HTTP_PORT
            value: "7070"
          - name: QUARKUS_HTTPS_PORT
            value: "7443"
          - name: QUARKUS_HTTP_SSL_CERTIFICATE_FILE
            value: "/pki/tls.crt"
          - name: QUARKUS_HTTP_SSL_CERTIFICATE_KEY_FILE
            value: "/pki/tls.key"
          ports:
          - containerPort: 7070
            protocol: TCP
          - containerPort: 7443
            protocol: TCP
          resources:
            limits:
              memory: "${MEMORY_LIMIT}"
            requests:
              memory: "256Mi"
          volumeMounts:
          - name: app-shadowbadge-certs-volume
            mountPath: /pki/
          dnsPolicy: ClusterFirst
          restartPolicy: Always
        # gatekeeper authentication sidecar
        - name: gatekeeper
          image: 'gatekeeper:latest'
          ports:
          - containerPort: 8443
            protocol: TCP
          - containerPort: 8080
            protocol: TCP
          imagePullPolicy: Always
          volumeMounts:
          - name: app-shadowbadge-certs-volume
            mountPath: /pki/
          terminationMessagePolicy: File
          terminationMessagePath: /dev/termination-log
          args:
          # insanely helpful reference: https://github.com/keycloak/keycloak-gatekeeper/blob/master/doc.go
          - '--listen-http=0.0.0.0:8080'
          - '--listen=0.0.0.0:8443'
          - '--verbose=true'
          - '--client-id=${KEYCLOAK_CLIENT_ID}'
          - '--client-secret=${KEYCLOAK_CLIENT_SECRET}'
          - '--discovery-url=${KEYCLOAK_URL}/auth/realms/${KEYCLOAK_REALM}'
          - '--enable-logging=true'
          - '--tls-cert=/pki/tls.crt'
          - '--tls-private-key=/pki/tls.key'
          - '--redirection-url=https://${EXTERNAL_HOSTNAME}'
          - '--upstream-url=https://localhost:7443'
          - '--skip-upstream-tls-verify=true'
          - '--enable-refresh-tokens=true'
          - '--encryption-key=${ENCRYPTION_KEY}'
          - '--enable-default-deny=false'
          - '--resources=uri=/badges/secure/*'
          - '--resources=uri=/*|white-listed=true'
          - '--preserve-host=true'
          - '--enable-security-filter=true'
          - '--hostnames=${EXTERNAL_HOSTNAME}'
          - '--cors-origins=${EXTERNAL_HOSTNAME},${KEYCLOAK_URL}'
          - '--enable-logout-redirect=true'
          - '--enable-https-redirection=true'
          resources:
            limits:
              memory: 256Mi
            requests:
              memory: 128Mi
        volumes:
        - name: app-shadowbadge-certs-volume
          secret:
            secretName: ${CERTIFICATE_SECRET_NAME}
        triggers:
        - type: ImageChange
          imageChangeParams:
            automatic: true
            containerNames:
            - shadowbadge-ui-${OUTPUT_TYPE}
            from:
              kind: ImageStreamTag
              name: is-shadowbadge-ui-${OUTPUT_TYPE}:latest
        - type: ConfigChange
parameters:
- name: OUTPUT_TYPE
  displayName: Output Type
  description: Type of output, either 'native' or 'jvm'
  value: jvm
  required: true
- name: DOCKER_IMAGE
  displayName: Upstream Source Docker Image
  description: Docker image, either 'fabric8/java-centos-openjdk8-jdk:latest' for JVM or 'registry.access.redhat.com/ubi8/ubi-minimal:latest' for native. (This value should match the FROM statement in the Docker iamge)
  value: "fabric8/java-centos-openjdk8-jdk:latest"
  required: true
- name: REPLICA_COUNT
  value: "1"
  required: true
- name: POSTGRES_SERVICE
  required: true
- name: POSTGRES_PORT
  value: "5432"
  required: true
- name: POSTGRES_DB
  required: true
- name: POSTGRES_USER
  required: true
- name: POSTGRES_PASSWORD
  required: true
- name: KEYCLOAK_URL
  description: The URL to the keycloak server used for authentication. This should be the entire URL including protocol. It should not end with the trailing slash.
  required: true
- name: KEYCLOAK_REALM
  description: The name of the Keycloak realm to use.
  required: true
- name: KEYCLOAK_CLIENT_ID
  description: The name of the Keycloak client in the realm.
  required: true
- name: KEYCLOAK_CLIENT_SECRET
  description: The credential secret for the Keycloak client.
- name: EXTERNAL_HOSTNAME
  description: The external route hostname. This template does not configure the routes but if you are using Gatekeeper this is the best way to make Shadowbadge correctly redirect.
  value: ""
- name: ACCOUNT_URL
  description: The url to the account service on your Keycloak server. If this value is not set the "account" link redirects to the index
  value: ""
- name: ENCRYPTION_KEY
  description: A key used to encrypt the value of the token exchange in Gatekeeper. Must be 16 or 32 characters. (Will be generated if left blank.)
  from: '[a-zA-Z0-9]{32}'
  generate: expression
  required: true
- name: CERTIFICATE_SECRET_NAME
  description: A certificate secret name where the secret has a 'tls.key' and 'tls.crt' file for use by Gatekeeper. By default uses the certificates created by the shadowbadge-ui service.
  value: "app-shadowbadge-certs"
- name: MEMORY_LIMIT
  description: The upper memory limit of the Shadowbadge UI Pod
  value: "512Mi"
